{"ast":null,"code":"var _jsxFileName = \"/home/igorf/Documentos/projetos-pessoais/projeto-web/client/src/components/Cadastro.js\";\nimport React, { Component } from 'react';\nimport MyInput from './MyInput';\nimport '../style/Cadastro.css';\nimport axios from 'axios';\nimport { isMobile } from 'react-device-detect';\nimport NotifyError from './NotifyError';\n\nclass Cadastro extends Component {\n  constructor(props) {\n    super(props);\n    this.nome = React.createRef();\n    this.state = {\n      nome: '',\n      email: '',\n      senha: '',\n      confirmacaoSenha: ''\n    };\n    this.cadastrar = this.cadastrar.bind(this);\n  }\n\n  cadastrar() {\n    let erros = [];\n    let campos = ['nome', 'email', 'senha', 'confirmacaoSenha']; // todo validação email\n\n    campos.forEach(campo => {\n      if (!this.state[campo] || this.state[campo].length < 3) {\n        erros.push(campo);\n      }\n    });\n\n    if (erros.length === 0) {\n      if (this.state.senha === this.state.confirmacaoSenha) {\n        axios.post('/api/cadastrar-usuario', {\n          nome: this.state.nome,\n          email: this.state.email,\n          senha: this.state.senha\n        }).then(response => {\n          this.props.onCadastrar(response);\n        }).catch(error => {\n          console.log('error: ', error);\n          this.refs.NotifyError.abrir('Erro ao cadastrar os dados!');\n        });\n      } else {\n        this.refs.NotifyError.abrir('As senhas informadas não batem!');\n      }\n    } else {\n      this.refs.NotifyError.abrir('Por favor preencha todas as informações! Cada campo deve contar 3 ou mais caracteres');\n    }\n    /*\n    {\n            login: this.state.login,\n            senha: this.state.senha,\n            confirmacaoSenha: this.state.confirmacaoSenha,\n            nome: this.state.nome\n        }\n    */\n\n  }\n\n  render() {\n    let classNameCardCadastro;\n\n    if (isMobile) {\n      classNameCardCadastro = 'Cadastro-card-mobile';\n    } else {\n      classNameCardCadastro = 'Cadastro-card';\n    }\n\n    return (\n      /*#__PURE__*/\n\n      /*onChange={event => onChange(changeValue('Nome', event.target.value))}*/\n      React.createElement(\"div\", {\n        className: classNameCardCadastro,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NotifyError, {\n        ref: \"NotifyError\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"Title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, \"Cadastrar-se\"), /*#__PURE__*/React.createElement(MyInput, {\n        label: 'Nome',\n        onChange: event => {\n          this.setState({\n            nome: event.target.value\n          });\n        },\n        value: this.state.nome,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(MyInput, {\n        label: 'E-mail',\n        onChange: event => {\n          this.setState({\n            email: event.target.value\n          });\n        },\n        value: this.state.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(MyInput, {\n        label: 'Senha',\n        onChange: event => {\n          this.setState({\n            senha: event.target.value\n          });\n        },\n        value: this.state.senha,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(MyInput, {\n        label: 'Confirmar Senha',\n        onChange: event => {\n          this.setState({\n            confirmacaoSenha: event.target.value\n          });\n        },\n        value: this.state.confirmacaoSenha,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: event => this.cadastrar(),\n        className: \"Botao-entrar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, \"Cadastrar\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Voltar-area\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.props.onVoltar,\n        className: \"Voltar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 46\n        }\n      }, \"Voltar\")))\n    );\n  }\n\n}\n\nexport default Cadastro;","map":{"version":3,"sources":["/home/igorf/Documentos/projetos-pessoais/projeto-web/client/src/components/Cadastro.js"],"names":["React","Component","MyInput","axios","isMobile","NotifyError","Cadastro","constructor","props","nome","createRef","state","email","senha","confirmacaoSenha","cadastrar","bind","erros","campos","forEach","campo","length","push","post","then","response","onCadastrar","catch","error","console","log","refs","abrir","render","classNameCardCadastro","event","setState","target","value","onVoltar"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MyInput from './MyInput';\nimport '../style/Cadastro.css';\nimport axios from 'axios';\nimport { isMobile } from 'react-device-detect'\nimport NotifyError from './NotifyError'\n\nclass Cadastro extends Component {\n    constructor(props) {\n        super(props);\n        this.nome = React.createRef();\n\n        this.state = {\n            nome: '',\n            email: '',\n            senha: '',\n            confirmacaoSenha: ''\n        }\n        this.cadastrar = this.cadastrar.bind(this);\n    }\n\n    cadastrar () {\n        let erros = []\n        let campos = ['nome', 'email', 'senha', 'confirmacaoSenha']\n        // todo validação email\n        campos.forEach((campo) => {\n            if ((!this.state[campo]) || this.state[campo].length < 3) {\n                erros.push(campo)\n            }\n        })\n        if (erros.length === 0) {\n            if (this.state.senha === this.state.confirmacaoSenha) {\n                axios.post('/api/cadastrar-usuario', { nome: this.state.nome, email: this.state.email, senha: this.state.senha }).then((response) => {\n                    this.props.onCadastrar(response);\n                }).catch((error) => {\n                    console.log('error: ', error)\n                    this.refs.NotifyError.abrir('Erro ao cadastrar os dados!')\n                })\n            } else {\n                this.refs.NotifyError.abrir('As senhas informadas não batem!')\n            }\n        } else {\n            this.refs.NotifyError.abrir('Por favor preencha todas as informações! Cada campo deve contar 3 ou mais caracteres')\n        }\n        /*\n        {\n                login: this.state.login,\n                senha: this.state.senha,\n                confirmacaoSenha: this.state.confirmacaoSenha,\n                nome: this.state.nome\n            }\n        */\n    }\n\n    render () {\n        let classNameCardCadastro\n        if (isMobile) {\n            classNameCardCadastro = 'Cadastro-card-mobile'\n        } else {\n            classNameCardCadastro = 'Cadastro-card'\n        }\n        return (\n            /*onChange={event => onChange(changeValue('Nome', event.target.value))}*/\n            <div className={classNameCardCadastro}>\n                <NotifyError ref=\"NotifyError\"/>\n                <span className=\"Title\">Cadastrar-se</span>\n                <MyInput label={'Nome'} onChange={(event) => { this.setState({nome:event.target.value}) }} value={this.state.nome}/>\n                <MyInput label={'E-mail'} onChange={(event) => { this.setState({email:event.target.value}) }} value={this.state.email}/>\n                <MyInput label={'Senha'} onChange={(event) => { this.setState({senha:event.target.value}) }} value={this.state.senha}/>\n                <MyInput label={'Confirmar Senha'} onChange={(event) => { this.setState({confirmacaoSenha:event.target.value}) }} value={this.state.confirmacaoSenha}/>\n                <button onClick={(event) => this.cadastrar()} className=\"Botao-entrar\">Cadastrar</button>\n                <div className=\"Voltar-area\"><span onClick={this.props.onVoltar} className=\"Voltar\">Voltar</span></div>\n            </div>\n        )\n    }\n}\n\nexport default Cadastro;\n"]},"metadata":{},"sourceType":"module"}